import sys
import os
import time
import logging

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from logging_info.logging_config import setup_logging
from data import max_speed

setup_logging()

def clear_terminal():
    if os.name == "nt":
        os.system("cls")
    else:
        os.system("clear")

class SpeedOperations:
    @staticmethod
    def increase_speed(plane) -> str:
        """
        Increases the speed of the plane until it reaches a random speed
        generated by max_speed(). The speed is increased by 9 km/h each time.
        If the speed reaches 200 km/h and the plane is not flying, 
        it takes off.
        """
        target_speed = max_speed()
        plane.is_flying = False
        logging.info(f"Starting to increase speed to {target_speed} km/h.")
        while plane.speed < target_speed:
            clear_terminal()
            if plane.speed >= 200 and not plane.is_flying:
                plane.is_flying = True
                print(f"The plane took off. Speed: {plane.speed} km/h")
            plane.speed += 9
            plane.current_status()
            time.sleep(0.3)
        
        print(f"Target speed of {target_speed} km/h reached!")
        # After reaching the max speed, start decreasing the speed
        return SpeedOperations.decrease_speed(plane)
    
    @staticmethod
    def decrease_speed(plane) -> str:
        """
        Decreases the speed of the plane until it reaches 0 km/h.
        If the speed goes below 200 km/h and the plane is flying, it lands.
        """
        logging.info("Starting to decrease speed.")
        while plane.speed > 0:
            clear_terminal()
            plane.speed -= 9
            if plane.speed < 200 and plane.is_flying:
                plane.is_flying = False
                print(f"The plane landed. Speed: {plane.speed} km/h")
            print(f"Speed: {plane.speed} km/h")
            plane.current_status()
            time.sleep(0.3)
        logging.info(f"Speed decreased to {plane.speed} km/h.")
        return f"Speed decreased to {plane.speed} km/h"
